import{u as f,a as x,c as y,j as n,b as m,d as u,B as b,g as S,e as C,p as K,l as A,R as F,f as p}from"./index-CnQ6qcMk.js";import{u as D}from"./BotDetails-ZwtorfVQ.js";import{B as g}from"./BotPopover-CVI2MEAa.js";import{T}from"./Table-DWEY_un_.js";/* empty css              */import"./bots-BsBiS4QJ.js";import"./lore-08CTWJsY.js";import"./simulatorCalcs-BY1vyAjU.js";import"./ItemPopover-Cc-Mav5E.js";import"./items-RjbLE1iR.js";const j=[{value:"Simple"},{value:"Spreadsheet"}],B=[{value:"Any"},{value:"Architect",spoiler:"Redacted",tooltip:"Any Architect or Architect-related bots."},{value:"0b10",tooltip:"Any standard or prototype 0b10 bots."},{value:"Derelict",tooltip:"Any non-0b10 Derelict bots."},{value:"Exiles",tooltip:"Any Exiles or Exiles-related bots."},{value:"UFD",spoiler:"Spoiler",tooltip:"Any United Federation of Derelict (Scraptown) or related bots"},{value:"Unchained",spoiler:"Spoiler",tooltip:"Any Unchained or related bots"},{value:"Warlord",spoiler:"Spoiler",tooltip:"Any Warlord-related bots"},{value:"Zionite",spoiler:"Spoiler",tooltip:"Any Zion-related bots including Imprint-related bots"}],w=[{header:"Overview",columns:[{accessorKey:"name",header:"Name",size:12,maxSize:12,cell:e=>n.jsx(g,{className:"name-popover",bot:e.row.original})},{accessorKey:"class",header:"Class",size:12,maxSize:12},{accessorKey:"size",header:"Size"},{accessorKey:"profile",header:"Profile"},{accessorKey:"rating",header:"Rating"},{accessorKey:"tier",header:"Tier"},{accessorKey:"Threat",header:"Threat"},{accessorKey:"value",header:"Value"},{accessorKey:"energyGeneration",header:"Energy Generation"},{accessorKey:"heatDissipation",header:"Heat Dissipation"},{accessorKey:"visualRange",header:"Visual Range"},{accessorKey:"memory",header:"Memory"},{accessorKey:"spotPercent",header:"Spot %"},{accessorKey:"movement",header:"Movement",sortingFn:(e,a,t)=>P(e.getValue(t),a.getValue(t)),size:10,maxSize:10},{accessorKey:"coreIntegrity",header:"Core Integrity"},{accessorKey:"coreExposure",header:"Core Exposure"},{accessorKey:"salvagePotential",header:"Salvage Potential",sortingFn:(e,a,t)=>L(e.getValue(t),a.getValue(t))}]},{header:"Parts",columns:[{accessorKey:"armamentString",header:"Armament",size:25},{accessorKey:"componentsString",header:"Components",size:60}]},{header:"Resistances",columns:[{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Electromagnetic},header:"Electromagnetic"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Explosive},header:"Explosive"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Impact},header:"Impact"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Kinetic},header:"Kinetic"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Piercing},header:"Piercing"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Slashing},header:"Slashing"},{accessorFn:e=>{var a;return(a=e.resistances)==null?void 0:a.Thermal},header:"Thermal"}]},{header:"Combat",columns:[{accessorFn:e=>{var a;return((a=e.damagePerTurn)==null?void 0:a.toFixed(0))||0},header:"Damage/Turn"},{accessorFn:e=>{var a;return((a=e.damagePerVolley)==null?void 0:a.toFixed(0))||0},header:"Damage/Volley"},{accessorFn:e=>e.volleyTime||0,header:"Volley Time"}]},{header:"Other",columns:[{accessorKey:"immunitiesString",header:"Immunities",size:15},{accessorKey:"traitsString",header:"Traits",size:60}]}],h=/\((\d*)/;function P(e,a){const t=p(h.exec(e)[1],0),l=p(h.exec(a)[1],0);return t-l}function L(e,a){function t(o){if(typeof o!="string"||o==="")return 0;const r=o.split("~").map(i=>i.trim()).map(i=>parseInt(i));return r.reduce((i,d)=>i+d,0)/r.length}const l=t(e),s=t(a);return l-s}function V(e,a){const t=f(),l=a.getAllBots().filter(s=>{if(!y(s.spoiler,t))return!1;if(e.name&&e.name.length>0){const o=e.name.toLowerCase(),r=s.name.toLowerCase();if(!r.includes(o)&&!A(r).includes(o))return!1}if(e.class&&e.class.length>0&&!s.class.toLowerCase().includes(e.class.toLowerCase()))return!1;if(e.part&&e.part.length>0){const o=e.part.toLowerCase();if(!s.armamentData.find(r=>r.name.toLowerCase().includes(o))&&!s.componentData.find(r=>r.name.toLowerCase().includes(o))&&!s.armamentOptionData.find(r=>r.find(i=>i.name.toLowerCase().includes(o)))&&!s.componentOptionData.find(r=>r.find(i=>i.name.toLowerCase().includes(o))))return!1}return!(e.faction&&e.faction!=="Any"&&!s.categories.includes(e.faction))});return l.sort((s,o)=>s.name.localeCompare(o.name)),l}function z(){const e=C();return K(e,{})}function E(e,a){const t=e;return t==="mode"&&a.mode==="Simple"||t==="faction"&&a.faction==="Any"}function N({bots:e}){const a=e.map(t=>n.jsx(g,{bot:t},t.name));return n.jsx("div",{className:"bot-button-grid",children:a})}function R({bots:e}){const[a,t]=F.useState([]);return n.jsx(T,{className:"table",data:e,columns:w,setSorting:t,sorting:a,stickyHeader:!0})}function q(){const e=D(),a=f(),[t,l]=x(),s=z();function o(c){const v=S("/bots",c,E);l(v,{replace:!0})}const r=V(s,e);let i;s.mode==="Spreadsheet"?i=n.jsx(R,{bots:r}):i=n.jsx(N,{bots:r});const d=B.filter(c=>y(c.spoiler||"None",a));return n.jsxs("div",{className:"page-content",children:[n.jsxs("div",{className:"page-input-group",children:[n.jsx(m,{label:"Name",placeholder:"Any",tooltip:"The name of a bot to search for.",value:s.name||"",onChange:c=>{o({...s,name:c})}}),n.jsx(m,{label:"Class",placeholder:"Any",tooltip:"The class of a bot to search for.",value:s.class||"",onChange:c=>{o({...s,class:c})}}),n.jsx(m,{label:"Part",placeholder:"Any",tooltip:"The name of a part to search for.",value:s.part||"",onChange:c=>{o({...s,part:c})}}),n.jsx(u,{label:"Mode",buttons:j,className:"flex-grow-0",tooltip:"The mode to display the parts in.",selected:s.mode,onValueChanged:c=>{o({...s,mode:c})}}),n.jsx(b,{className:"flex-grow-0",tooltip:"Resets all filters to their default (unfiltered) state",onClick:()=>{o({mode:s.mode})},children:"Reset"})]}),n.jsx("div",{className:"page-input-group",children:n.jsx(u,{label:"Faction",buttons:d,tooltip:"The mode to display the bots in.",selected:s.faction,onValueChanged:c=>{o({...s,faction:c})}})}),i]})}export{q as default};
