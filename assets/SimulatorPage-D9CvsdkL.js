import{v as mo,j as o,D as Ve,u as ho,r as U,c as De,S as Fe,b as u,z as G,d as Y,B as J,a as po,f as p,E as fo,e as vo,p as bo,g as go}from"./index-X5Y3kBSC.js";import{L as Le,a as xo,s as yo,b as Co,m as Ee,c as ze,d as Ie,v as jo,g as wo,e as To,f as Mo,i as No,h as Ao,j as We}from"./simulatorCalcs-CVzEf7Ht.js";import{C as ko}from"./itemTypes-D0s_vHyk.js";import{S as Bo,e as Ro,C as Do,n as Fo,p as Eo,o as zo,L as Io,q as Wo,c as qo,b as Ko,f as X,g as Vo,h as Lo,i as Oo}from"./chartColors-DtQ72Mr-.js";import{u as Oe}from"./BotDetails-DzVPpRoj.js";import{u as Ce,I as Go}from"./ItemPopover-DhiWNPjH.js";import{B as Uo}from"./BotPopover-983t2hC2.js";/* empty css              */import"./botTypes-_WzAd8ij.js";import"./bots-DmHYWh_Z.js";import"./lore-08CTWJsY.js";import"./items-Xj_jdZG2.js";Do.register(Fo,Eo,zo,Io,Wo,qo,Ko);function qe({chartTitle:e,values:t,backgroundColors:a,borderColors:r,isPercentage:d,stepSize:m,xLabel:f,yLabel:k}){const g=mo(),i=Math.max(...t.map(h=>Math.max(...h.values.map(B=>B.x))));return o.jsx(Bo,{data:Ho(t,a,r),datasetIdKey:"id",options:_o(e,d,m,g,f,k,i),plugins:[Ro]})}function Ho(e,t,a){return{datasets:e.map((r,d)=>({backgroundColor:t[d],borderColor:a[d],data:r.values,fill:"start",id:r.id||r.label,label:r.label,pointRadius:0,pointHitRadius:25,showLine:!0,stepped:"before"}))}}function _o(e,t,a,r,d,m,f){return{animation:{duration:300},color:X,maintainAspectRatio:!1,plugins:{chartCanvasBackgroundColor:{color:r==="Cogmind"?Vo:Lo},legend:{labels:{font:{size:16}}},title:{color:X,font:{size:24},display:!0,text:e}},scales:{x:{border:{display:!1},min:0,max:f,grid:{display:!1},ticks:{color:X,stepSize:a},title:{color:X,display:d!==void 0,font:{size:24},text:d}},y:{border:{display:!1},max:t?100:void 0,min:t?0:void 0,grid:{color:Oo},ticks:{callback:t?(k,g,i)=>k+"%":void 0,color:X},title:{color:X,display:m!==void 0,font:{size:24},text:m}}}}}function ie(e){return e<=.25?"lootbox-color-red":e<=.5?"lootbox-color-orange":e<=.75?"lootbox-color-yellow":"lootbox-color-green"}function fe(e){return e<=.25?"lootbox-color-green":e<=.5?"lootbox-color-yellow":e<=.75?"lootbox-color-orange":"lootbox-color-red"}function $o({bot:e,lootState:t}){const a=Ce(),r=t.matterDrop/t.numKills,d=t.matterBlasted/t.numKills,m=d>0;return o.jsxs("div",{className:"loot-box",children:[o.jsxs("div",{className:"loot-box-part-name-container",children:[o.jsx("span",{children:"Matter ["}),o.jsx("img",{src:Ve(a.getItem("Matter"))}),o.jsx("span",{children:"]"})]}),o.jsxs("div",{className:"loot-box-content-grid",children:[o.jsx("span",{children:"Avg. Death Drop"}),o.jsxs("span",{className:ie(r/e.salvageHigh),children:[r.toFixed(1),"/",e.salvagePotential]}),m&&o.jsxs(o.Fragment,{children:[o.jsx("span",{children:"Avg. Blasted Off"}),o.jsx("span",{children:d.toFixed(1)})]})]})]})}function So({itemLootState:e,numKills:t,showCorruption:a,showCriticals:r,showMelted:d}){const m=e.numDrops/t*100,f=e.totalIntegrity>0?e.totalIntegrity/e.numDrops:0,k=e.totalCorruptionPercent/t,g=e.totalFried/t*100,i=e.totalCritRemoves>0?e.totalCritRemoves/e.numDrops*100:0,h=e.totalMelted>0?e.totalMelted/t*100:0,B=[...e.integrityDrops];B.sort();const I=B.length===0?0:B[Math.floor(B.length/2)];return o.jsxs("div",{className:"loot-box",children:[o.jsxs("div",{className:"loot-box-part-name-container",children:[o.jsxs("span",{children:[e.item.name," ["]}),o.jsx("img",{src:Ve(e.item)}),o.jsx("span",{children:"]"})]}),o.jsxs("div",{className:"loot-box-content-grid",children:[o.jsx("span",{children:"Drop Rate"}),o.jsxs("span",{className:ie(m/70),children:[m.toFixed(1),"%"]}),o.jsx("span",{children:"Average Integrity"}),o.jsxs("span",{className:ie(f/e.item.integrity),children:[f.toFixed(1),"/",e.item.integrity]}),o.jsx("span",{children:"Median Integrity"}),o.jsxs("span",{className:ie(I/e.item.integrity),children:[I,"/",e.item.integrity]}),a&&o.jsxs(o.Fragment,{children:[o.jsx("span",{children:"Average Corruption"}),o.jsxs("span",{className:fe(k/7.5),children:[k.toFixed(1),"%"]}),o.jsx("span",{children:"Fried Rate"}),o.jsxs("span",{className:fe(g/40),children:[g.toFixed(1),"%"]})]}),r&&o.jsxs(o.Fragment,{children:[o.jsx("span",{children:"Crit Off Rate"}),o.jsxs("span",{children:[i.toFixed(1),"%"]})]}),d&&o.jsxs(o.Fragment,{children:[o.jsx("span",{children:"Melted rate"}),o.jsxs("span",{className:fe(h/40),children:[h.toFixed(1),"%"]})]})]})]})}const ve=[{value:"Stand/Fight"},{value:"Unpowered/Dormant"},{value:"Unpowered 10 Turns",tooltip:"The bot is unpowered initially and will wake up 10 turns after being hit in the core. Useful for a particular spoiler bot."},{value:"Siege/Fight"},{value:"Already Sieged/Fight"},{value:"Shield/Fight"},{value:"Already Shielded/Fight"},{value:"Running"},{value:"Run When Hit"}],Yo=[{value:"Ranged"},{value:"Melee"}],be=[{value:"None",label:"No damage reduction"},{value:"Remote Shield",label:"Remote Shield (25%)"},{value:"Stasis Trap",label:"Stasis Trap (25%)"},{value:"Phase Wall",label:"Phase Wall (50%)"},{value:"Remote Force Field",label:"Remote Force Field (50%)"},{value:"Stasis Bubble",label:"Stasis Bubble (50%)"}],je=[{value:"Kill"},{value:"Kill or Core Disrupt"},{value:"Kill or No Power"},{value:"Kill or No Weapons"}],Ge=[...je];Ge.push({value:"Tele",label:"Architect Tele (80% integrity, 1 weapon, or 1 prop)"});const Ue=[...je];Ue.push({value:"Kill or No TNC"});const ge=[{value:"No Special"},{value:"In Siege Mode"},{value:"In High Siege Mode"},{value:"In Martial Mode"},{value:"Entering Siege Mode"},{value:"Entering High Siege Mode"},{value:"Entering Martial Mode"}],xe=[{value:"None"},{value:"First Only"},{value:"All"}],Qo=[{value:"Volleys"},{value:"Time"}],ne=[{value:"No"},{value:"Yes"}],Xo=["Impact Weapon","Piercing Weapon","Slashing Weapon","Special Melee Weapon"],Jo=["Ballistic Cannon","Ballistic Gun","Energy Cannon","Energy Gun","Launcher","Special Weapon"],Zo=["Core Cannon","Core Stripper","Modified Sigix Sheargun","Sigix Broadsword","Sigix Shearcannon","Sigix Sheargun"];function Po({disabled:e,i:t,pageState:a,updatePageState:r,weaponInfo:d,weaponItem:m,weaponOptions:f}){let k;const g=a.weaponState[t];return m.overloadStability?k=o.jsx(Y,{label:"Overload",disabled:e,buttons:ne,tooltip:"Whether to fire the weapon as overloaded (double damage). Does not take into account effects of additional heat generation or stability-related effects.",selected:g.overload||"No",onValueChanged:i=>{const h=[...a.weaponState];h[t]={...g,overload:i},r({...a,weaponState:h})}}):Zo.includes(m.name)&&(k=o.jsx(Y,{label:"Exoskeleton",disabled:e,buttons:ne,tooltip:"Whether a Sigix Exoskeleton is equipped (double damage on non-AOE Sigix weaponry).",selected:g.exo||"No",onValueChanged:i=>{const h=[...a.weaponState];h[t]={...g,exo:i},r({...a,weaponState:h})}})),o.jsxs("div",{className:"weapon-row",children:[o.jsxs("div",{className:"flex",children:[o.jsx(G,{id:d.id.toString(),isDisabled:e,className:"weapon-select",label:"Weapon",tooltip:"Name of an equipped weapon to fire.",options:f,value:f.find(i=>i.value===d.name),onChange:i=>{const h=[...a.weaponState];h[t]={id:g.id,name:i.value,number:g.number},r({...a,weaponState:h})}}),o.jsx(Go,{item:m,tooltip:"Show details about the part.",text:"?",showWikiLink:!0})]}),o.jsx(u,{label:"Number",disabled:e,className:"flex-1-1",value:d.number||"",onChange:i=>{const h=[...a.weaponState];h[t]={...g,number:i},r({...a,weaponState:h})},placeholder:"1",tooltip:"How many weapons of this type to have equipped."}),k,o.jsx(J,{tooltip:"Deletes this weapon.",disabled:e,onClick:()=>{const i=[...a.weaponState];i.splice(i.indexOf(d),1),r({...a,weaponState:i})},children:"X"})]})}function ea({pageState:e,simulationInProgress:t,updatePageState:a}){var V;const r=Oe(),d=Ce(),m=ho(),f=U.useMemo(()=>r.getAllBotsSorted().filter(n=>De(n.spoiler,m)).map(n=>({value:n.name})),[m]),k=U.useMemo(()=>d.getAllItemsSorted().filter(n=>{if(!De(n.spoiler,m))return!1;if(e.combatType==="Melee"){if(!Xo.includes(n.type))return!1}else if(!Jo.includes(n.type))return!1;if(n.damageType!=="Special")return!0}).map(n=>({value:n.name})),[m,e]),g=r.getBotOrNull(e.botName||"")===null?"G-34 Mercenary":e.botName,i=r.getBot(g);let h;i.name==="Architect"?h=Ge:i.name==="A-15 Conveyor"?h=Ue:h=je;const B=o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:"page-input-group",children:[o.jsx(Fe,{label:"Melee Analysis Suites",tooltip:"The number of each type of Melee Analysis Suites equipped. Provides bonus accuracy and a minimum damage increase, but not more than the maximum damage for a weapon."}),o.jsx(u,{label:"Standard",disabled:t,value:e.baseMas||"",onChange:n=>a({...e,baseMas:n}),placeholder:"0",tooltip:"The amount of standard Melee Analysis Suites equipped. Each provides 5% accuracy and a minimum damage increase of 2."}),o.jsx(u,{label:"Imp.",disabled:t,value:e.impMas||"",onChange:n=>a({...e,impMas:n}),placeholder:"0",tooltip:"The amount of Improved Melee Analysis Suites equipped. Each provides 6% accuracy and a minimum damage increase of 3."}),o.jsx(u,{label:"Adv.",disabled:t,value:e.advMas||"",onChange:n=>a({...e,advMas:n}),placeholder:"0",tooltip:"The amount of Advanced Melee Analysis Suites equipped. Each provides 8% accuracy and a minimum damage increase of 4."}),o.jsx(u,{label:"Exp.",disabled:t,value:e.expMas||"",onChange:n=>a({...e,expMas:n}),placeholder:"0",tooltip:"The amount of Experimental Melee Analysis Suites equipped. Each provides 12% accuracy and a minimum damage increase of 6."}),o.jsx(u,{label:"Targeting",disabled:t,value:e.targeting||"",onChange:n=>a({...e,targeting:n}),placeholder:"0%",tooltip:"The amount of targeting bonus from utilities such as the Weapon Mount. Applied directly to all weapons."})]}),o.jsxs("div",{className:"page-input-group",children:[o.jsx(Fe,{label:"Force Boosters",tooltip:"The number of each type of Force Booster equipped. Provides a bonus to maximum damage and a decrease to accuracy. These utilities half_stack, so only the 2 highest ratings count."}),o.jsx(u,{label:"Standard",disabled:t,value:e.baseForceBoosters||"",onChange:n=>a({...e,baseForceBoosters:n}),placeholder:"0",tooltip:"The amount of standard Force Boosters equipped. Provides a maximum damage increase of 20% and a melee accuracy penalty of 4%."}),o.jsx(u,{label:"Imp.",disabled:t,value:e.impForceBoosters||"",onChange:n=>a({...e,impForceBoosters:n}),placeholder:"0",tooltip:"The amount of Improved Force Boosters equipped. Provides a maximum damage increase of 30% and a melee accuracy penalty of 6%."}),o.jsx(u,{label:"Adv.",disabled:t,value:e.advForceBoosters||"",onChange:n=>a({...e,advForceBoosters:n}),placeholder:"0",tooltip:"The amount of Advanced Force Boosters equipped. Provides a maximum damage increase of 40% and a melee accuracy penalty of 8%."}),m==="Redacted"&&o.jsx(u,{label:"Exp.",disabled:t,value:e.expForceBoosters||"",onChange:n=>a({...e,expForceBoosters:n}),placeholder:"0",tooltip:"The amount of Experimental Force Boosters equipped. Provides a maximum damage increase of 50% and a melee accuracy penalty of 10%."})]}),o.jsxs("div",{className:"page-input-group",children:[o.jsx(u,{label:"Initial Momentum",disabled:t,value:e.initialMomentum||"",onChange:n=>a({...e,initialMomentum:n}),placeholder:"0",tooltip:"The momentum bonus from movement for the first attack. This should be 0-3."}),o.jsx(u,{label:"Bonus Momentum",disabled:t,value:e.bonusMomentum||"",onChange:n=>a({...e,bonusMomentum:n}),placeholder:"0",tooltip:"The amount of bonus momentum from Reaction Control Systems (Always 0 or 1, no_stack)."}),o.jsx(u,{label:"Speed",disabled:t,value:e.speed||"",onChange:n=>a({...e,speed:n}),placeholder:"100",tooltip:"The speed of Cogmind. Higher speed provides increased momentum bonus damage."}),o.jsx(G,{className:"sneak-attack-select",isDisabled:t,label:"Sneak Attacks",isSearchable:!1,tooltip:"Whether to perform sneak attacks or not. Sneak attacks provide a base hit chance of 120% and double damage.",options:xe,value:xe.find(n=>n.value===e.sneakAttacks)||xe[0],onChange:n=>{a({...e,sneakAttacks:n.value})}}),o.jsx(u,{label:"Pre-Salvage",disabled:t,value:e.preSalvage||"",onChange:n=>a({...e,preSalvage:n}),placeholder:"0",tooltip:"The amount of salvage applied to this bot before the simulation started. Can be used to simulate hitting a bot a few times with + salvage before aiming to kill the bot to increase loot drops."})]})]}),I=o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:"page-input-group",children:[o.jsx(u,{label:"Targeting",disabled:t,value:e.targeting||"",onChange:n=>a({...e,targeting:n}),placeholder:"0%",tooltip:"The amount of targeting bonus from Targeting Computers or similar utilities (stacks). For reference, Base is 5%, Improved is 6%, Advanced is 8%, Experimental is 12%."}),o.jsx(u,{label:"Recoil Reduction",disabled:t,value:e.recoilReduction||"",onChange:n=>a({...e,recoilReduction:n}),placeholder:"0",tooltip:m=="Redacted"?"The amount of recoil reduction. Each tread slot has 1 recoil reduction, Recoil Stabilizers have 4, Adv. Recoil Stabilizers have 6, and Cep. Recoil Nullifiers have 99.":"The amount of recoil reduction. Each tread slot has 1 recoil reduction, Recoil Stabilizers have 4 and Adv. Recoil Stabilizers have 6."}),o.jsx(u,{label:"Distance",disabled:t,value:e.distance||"",onChange:n=>a({...e,distance:n}),placeholder:"6+",tooltip:"The distance from the target. Each tile closer than 6 tiles away provides 3% accuracy up to 15% at 1 tile away."}),o.jsx(G,{className:"special-select",isDisabled:t,label:"Special Prop",isSearchable:!1,tooltip:"The type of special propulsion mode active (if any). Siege mode removes all recoil and adds a 15% (standard) or 25% (high) bonus to targeting. Martial mode only removes all recoil.",options:ge,value:ge.find(n=>n.value===e.special)||ge[0],onChange:n=>{a({...e,special:n.value})}})]}),o.jsxs("div",{className:"page-input-group",children:[o.jsx(u,{label:"Particle Charging",disabled:t,value:e.particleCharger||"",onChange:n=>a({...e,particleCharger:n}),placeholder:"0%",tooltip:"The bonus from Particle Charger/Accelerators that are equipped (if any). Increases damage of energy gun/cannon weapons (half_stack). Base charger starts at 15%, going to 20%, 25%, 30%, 40%, and 50%."}),o.jsx(u,{label:"Kinecellerator",value:e.kinecellerator||"",disabled:t,onChange:n=>a({...e,kinecellerator:n}),placeholder:"0%",tooltip:m==="Redacted"?"The bonus from a Kinecellerator that's equipped (if any). Increases minimum damage of kinetic gun/cannon weapons. Base Kinecellerator starts at 30%, Improved at 40%, Advanced at 50%, and Experimental at 66%.":"The bonus from a Kinecellerator that's equipped (if any). Increases minimum damage of kinetic gun/cannon weapons. Base Kinecellerator starts at 30%, Improved at 40%, and Advanced at 50%."}),o.jsx(u,{label:"Weapon Cycling",disabled:t,value:e.weaponCycling||"",onChange:n=>a({...e,weaponCycling:n}),placeholder:"0%",tooltip:m==="Redacted"?"The percentage of Weapon Cycling or similar utilities that are equipped (if any). Decreases overall volley time. Stacks up to 30%, though a Mni. Quantum Capacitor can go up to 40%, and a Quantum Capacitor or Launcher Loader can go up to 50%.":"The percentage of Weapon Cycling or similar utilities that are equipped (if any). Decreases overall volley time. Stacks up to 30%, though a Quantum Capacitor or Launcher Loader can go up to 50%."}),o.jsx(u,{label:"Salvage Targeting",disabled:t,value:e.salvageTargeting||"",onChange:n=>a({...e,salvageTargeting:n}),placeholder:"0",tooltip:m==="Redacted"?"The bonus of Salvage Targeting Computers that are equipped (if any). Increase salvage generated from Gun-type weapons that fire a single projectile (stacks). Base starts at +1, Improved is +2, Advanced is +3, Makeshift is +4, and Experimental is +5.":"The bonus of Salvage Targeting Computers that are equipped (if any). Increase salvage generated from Gun-type weapons that fire a single projectile (stacks). Base starts at +1, Improved is +2, Advanced is +3, and Makeshift is +4."}),m!=="None"&&o.jsx(u,{label:"Partition Strike Chips",disabled:t,value:e.partitionStrikeChips||"",onChange:n=>a({...e,partitionStrikeChips:n}),placeholder:"0",tooltip:"The number of Partition Strike Chips that are equipped. Partition Strike Chips are like a +3 Salvage Targeting Computer that also works on cannons."})]})]}),j=o.jsxs(o.Fragment,{children:[(V=e.weaponState)==null?void 0:V.map((n,W)=>{const D=d.getItem(n.name);return o.jsx(Po,{disabled:t,pageState:e,updatePageState:a,weaponItem:D,weaponInfo:n,weaponOptions:k,i:W},n.id)}),o.jsx("div",{className:"new-weapon-row",children:o.jsx(G,{label:"Weapon",isDisabled:t,className:"weapon-select",tooltip:"Name of an equipped weapon to fire.",options:k,controlShouldRenderValue:!1,onChange:n=>{const W=[...e.weaponState||[]],D=Math.max(0,...W.map(R=>R.id+1));W.push({name:n.value,id:D}),a({...e,weaponState:W})}})})]});return o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:"page-input-group",children:[o.jsx(Y,{label:"Combat Type",disabled:t,buttons:Yo,className:"flex-grow-0",tooltip:"The type of weapons to display. Melee and ranged weapons also have unique utilities and other settings.",selected:e.combatType,onValueChanged:n=>{a({...e,weaponState:[],combatType:n})}}),o.jsx(u,{label:"Num Fights",disabled:t,value:e.numSimulations||"",onChange:n=>a({...e,numSimulations:n}),placeholder:"100,000",tooltip:"The number of fights to simulate. High numbers will increase result accuracy but also increase time to calculate."}),o.jsx(G,{className:"enemy-behavior-select",isDisabled:t,label:"Enemy Behavior",tooltip:"The behavior of the enemy when engaged in combat. The default for most hostile combat bots is Stand/Fight, and the behavior of most non-combat bots will be RUn When Hit.",isSearchable:!1,options:ve,value:ve.find(n=>n.value===e.enemyBehavior)||ve[0],onChange:n=>{a({...e,enemyBehavior:n.value})}}),o.jsx(J,{tooltip:"Resets all values to their default state",disabled:t,className:"flex-grow-0",onClick:()=>a({}),children:"Reset"})]}),o.jsxs("div",{className:"page-input-group",children:[o.jsxs("div",{className:"enemy-group",children:[o.jsx(G,{label:"Enemy",className:"enemy-select",isDisabled:t,tooltip:"The name of the enemy bot to fight.",options:f,value:f.find(n=>n.value===g),onChange:n=>{a({...e,botName:n.value})}}),o.jsx(Uo,{bot:i,text:"?",tooltip:"Show details about the bot."})]}),o.jsx(Y,{label:"Analysis",buttons:ne,disabled:t,tooltip:"Does Cogmind have the analysis for this bot? An analysis provides bonuses of 5% accuracy and 10% damage.",selected:e.analysis||"No",onValueChanged:n=>{a({...e,analysis:n})}}),o.jsx(G,{label:"Damage Reduction",isDisabled:t,className:"damage-reduction-select",tooltip:"The type of external damage reduction (if any) for the enemy. Note: this does not stack with personal damage reduction utilities.",isSearchable:!1,options:be,value:be.find(n=>n.value===e.damageReduction)||be[0],onChange:n=>{a({...e,damageReduction:n.value})}})]}),o.jsxs("div",{className:"page-input-group",children:[o.jsx(u,{label:"Corruption",disabled:t,value:e.corruption||"",onChange:n=>a({...e,corruption:n}),placeholder:"0%",tooltip:"The amount of corruption that Cogmind currently has. Corruption reduces accuracy by 1% for every 3% of corruption."}),o.jsx(u,{label:"Actions Since Moving",disabled:t,value:e.actionsSinceMoving||"",onChange:n=>a({...e,actionsSinceMoving:n}),placeholder:"2+",tooltip:"The number of actions performed since Cogmind last moved. For melee, there is a +10% accuracy bonus gained after not moving for 2 turns. For ranged, there is an additional -10% penalty if the most recent action was a move. Basically, 0 turns since moving = -10%, 1 turn = 0%, 2 turns = 10%."}),o.jsx(Y,{label:"On Legs",disabled:t,buttons:ne,tooltip:"Is Cogmind on legs? If so, the number of tiles run in a row provide an additional 5% penalty per tile moved.",selected:e.onLegs||"No",onValueChanged:n=>{a({...e,onLegs:n})}}),o.jsx(u,{label:"Tiles Run",disabled:t,value:e.tilesRun||"",onChange:n=>a({...e,tilesRun:n}),placeholder:"0",tooltip:"The number of tiles Cogmind has been running for if on legs. There is a -5% penalty per tile moved for ranged weapons, up to a maximum of -15%."})]}),e.combatType==="Melee"?B:I,o.jsxs("div",{className:"page-input-group last-pre-weapon-row",children:[o.jsx(u,{label:"Armor Integrity Analyzer",disabled:t,value:e.armorIntegrityAnalyzer||"",onChange:n=>a({...e,armorIntegrityAnalyzer:n}),placeholder:"0%",tooltip:"The type of armor integrity analyzer that's equipped (if any). Adds a chance of bypassing enemy armor. Values are 30% for basic, 40% for Improved, and 50% for Experimental."}),o.jsx(u,{label:"Core Analyzer",disabled:t,value:e.coreAnalyzer||"",onChange:n=>a({...e,coreAnalyzer:n}),placeholder:"0%",tooltip:"The bonus from one or more Core Analyzers that are equipped (if any). Increases core exposure by the specific amount (half_stack). Base Analyzer is 6% and Experimental is 8%, for a maximum of 12%."}),o.jsx(u,{label:"Target Analyzer",disabled:t,value:e.targetAnalyzer||"",onChange:n=>a({...e,targetAnalyzer:n}),placeholder:"0%",tooltip:"The bonus from one or more Target Analyzers that are equipped (if any). Increases critical hit % chance for weapons with a critical hit (half_stack). Base Analyzer is 5%, Improved is 6%, Advanced is 8%, and Experimental is 10%."}),e.combatType==="Melee"&&o.jsxs(o.Fragment,{children:[o.jsx(u,{label:"Actuator",disabled:t,value:e.actuator||"",onChange:n=>a({...e,actuator:n}),placeholder:"0%",tooltip:"The bonus from actuator that's equipped (if any). Decreases volley time by a fixed percentage. Microactuators are 20%, Nanoacturators are 30%, and Femtoactuators are 50%."}),o.jsx(u,{label:"Actuator Array",disabled:t,value:e.actuatorArray||"",onChange:n=>a({...e,actuatorArray:n}),placeholder:"0%",tooltip:"The bonus from one or two actuator arrays equipped. Increases followup chance for all weapons (half_stack). Base Actuator Array is 10%, Improved is 12%, Advanced is 16%, and Experimental is 20%."})]})]}),j,o.jsxs("div",{className:"page-input-group",children:[o.jsx(Y,{label:"X-Axis",disabled:t,className:"flex-grow-0",buttons:Qo,tooltip:"The type of x-axis to show on the graph.",selected:e.xAxis||"Volleys",onValueChanged:n=>{a({...e,xAxis:n})}}),o.jsx(Y,{label:"Show Loot",disabled:t,className:"flex-grow-0",buttons:ne,tooltip:"Whether or not to show estimated loot drops. Expected matter and part drop rate chance and integrity are shown. Crit off rate shows the % of the drop rate that was caused due to blast, sever, or sunder critical hits, if applicable.",selected:e.showLoot||"No",onValueChanged:n=>{a({...e,showLoot:n})}}),o.jsx(G,{label:"End Condition",isDisabled:t,tooltip:"The scenario to occur before the simulation is ended.",isSearchable:!1,options:h,value:h.find(n=>n.value===e.endCondition)||h[0],onChange:n=>{a({...e,endCondition:n.value})}})]})]})}const Ke=["rgba(228, 26, 28, .8)","rgba(55, 126, 184, .8)","rgba(36, 192, 36, .8)","rgba(152, 78, 163, .8)","rgba(255, 127, 0, .8)","rgba(255, 255, 51, .8)","rgba(243, 145, 146, .8)","rgba(145, 187, 222, .8)","rgba(135, 232, 135, .8)","rgba(202, 159, 209, .8)","rgba(255, 194, 133, .8)","rgba(163, 163, 0, .8)"];let ye=!1;function oa(){const e=vo(),t=bo(e,{});let a;if(t.weaponState!==void 0){const r=Le.decompressFromEncodedURIComponent(t.weaponState);if(r!==null){const d=JSON.parse(r);Array.isArray(d)&&(a=d)}}return{...t,weaponState:a}}const aa=/Core Regeneration \((\d*)\)/;function na(e){const t=e.traits;for(let a=0;a<t.length;a++){const r=aa.exec(t[a]);if(r!=null)return parseInt(r[1])}return 0}const ta=/Part Regeneration \((\d*)\)/;function sa(e){const t=e.traits;for(let a=0;a<t.length;a++){const r=ta.exec(t[a]);if(r!=null)return parseInt(r[1])}return 0}function ia(e){let t;if(e.weaponState&&e.weaponState.length>0){const a=JSON.stringify(e.weaponState);t=Le.compressToEncodedURIComponent(a)}return{...e,weaponState:t}}function la(e,t,a,r){const d=a.botName||"G-34 Mercenary",m=[];for(const l of a.weaponState??[]){const v=t.tryGetItem(l.name);if(v===void 0||v.slot!=="Weapon"){r(`Item ${l.name} is not a valid weapon, this is probably a bug.`);return}const s=p(l.number,1),C=l.overload==="Yes",A=l.exo==="Yes";for(let O=0;O<s;O++)m.push({def:v,overloaded:C||A,exo:A})}if(m.length===0){r("There must be at least 1 weapon selected.");return}const f=[];let k=0;function g(l,v){const s=l.type==="Protection",C=l.type==="Treads",A=l.coverage??0,O=l.type==="Leg"&&l.shield?2*A:A,$=s||C?2*A:A;f.push({armorAnalyzedCoverage:s?0:A,armorAnalyzedShieldedCoverage:s?0:O,armorAnalyzedSiegedCoverage:s?0:$,coverage:A,def:l,integrity:v,initialIndex:k++,protection:s,selfDamageReduction:0,shieldedCoverage:O,siegedCoverage:$})}const i=e.getBotOrNull(d);if(!i){r(`Bot ${d} is invalid, this is probably a bug.`);return}i.componentData.concat(i.armamentData).concat(i.componentOptionData.map(l=>l[0])).concat(i.armamentOptionData.map(l=>l[0])).forEach(l=>{for(let v=0;v<l.number;v++){const s=t.getItem(l.name);g(s,s.integrity)}});const h=i.coreCoverage,B=i.totalCoverage,I=i.coreIntegrity,j=h+f.reduce((l,v)=>l+v.armorAnalyzedCoverage,0),V=h+f.reduce((l,v)=>l+v.armorAnalyzedShieldedCoverage,0),n=h+f.reduce((l,v)=>l+v.armorAnalyzedSiegedCoverage,0),W=h+f.reduce((l,v)=>l+v.shieldedCoverage,0),D=h+f.reduce((l,v)=>l+v.siegedCoverage,0),R=a.enemyBehavior||"Stand/Fight",Z=R==="Unpowered/Dormant"||R==="Unpowered 10 Turns",te=xo(f,a.damageReduction||"None",Z);let Q=0;i.speed<100?Q=Math.trunc((100-i.speed)/5):Q=0;const le=R==="Already Shielded/Fight"&&f.find(l=>l.def.type==="Leg"&&l.def.shield)!==void 0,re=R==="Already Sieged/Fight"&&f.find(l=>l.def.type==="Treads"&&l.def.siege!==void 0)!==void 0,ce=p(a.preSalvage,0),P={armorAnalyzedCoverage:j,armorAnalyzedShieldedCoverage:V,armorAnalyzedSiegedCoverage:n,behavior:R,coreCoverage:h,coreDisrupted:!1,coreIntegrity:I,coreRegen:na(i),corruption:0,def:i,defensiveState:te,destroyedParts:[],dormant:Z,externalDamageReduction:a.damageReduction||"None",heat:0,immunities:i.immunities,initialCoreIntegrity:I,parts:f,partRegen:sa(i),resistances:i.resistances===void 0?{}:i.resistances,running:R==="Running",runningEvasion:Q,runningMomentum:R==="Running"?3:0,salvage:ce,shielded:le,shieldedCoverage:W,sieged:re,siegedCoverage:D,superfortressRegen:i.name==="Superfortress"?{nextRegenAttempt:0}:void 0,totalCoverage:B,tusToShield:R==="Shield/Fight"?400:0,tusToSiege:R==="Siege/Fight"?500:0};let ee=!1;const c=a.combatType==="Melee",M={bonus:0,recoilNegated:!1,tus:0},N=c?M:yo.get(a.special)||M,y=p(a.targeting,0),w=[p(a.baseMas,0),p(a.impMas,0),p(a.advMas,0),p(a.expMas,0)],x=[p(a.baseForceBoosters,0),p(a.impForceBoosters,0),p(a.advForceBoosters,0),p(a.expForceBoosters,0)];if(c){let l=2;for(let v=x.length-1;v>=0;v--)x[v]>l?(x[v]=l,l=0):l-=x[v]}let b=p(a.distance,6);b<=1&&(b=1);const T=p(a.recoilReduction,0),H=m.reduce((l,v)=>Co(v.def,T)+l,0),F=p(a.targetAnalyzer,0),q=p(a.salvageTargeting,0),L=p(a.partitionStrikeChips,0)*3,_=p(a.corruption,0),E=m.map((l,v)=>{const s=l.def;let C=0,A=0,O,$=0,de=0,Re;if(s.damage!==void 0){if(s.damage.includes("-")){const K=s.damage.split("-");C=parseInt(K[0]),A=parseInt(K[1])}else C=parseInt(s.damage),A=C;if(s.type==="Ballistic Gun"||s.type==="Ballistic Cannon"){const K=p(a.kinecellerator,0);C=Math.trunc(C*(1+K/100)),C>A&&(A=C)}else if(c&&!l.exo){let K=0;for(let z=0;z<Ee.length;z++)K+=w[z]*Ee[z];C=Math.min(K+C,A);let he=0,pe=0;for(let z=x.length-1;z>=0;z--)x[z]==2?(he=1.5*We[z],pe+=2):x[z]==1&&(he+=We[z]*(pe==0?1:.5),pe+=1);A=Math.floor(A*(1+he))}O=s.damageType}if(s.explosionDamage!==void 0){if(s.explosionDamage.includes("-")){const K=s.explosionDamage.split("-");$=parseInt(K[0]),de=parseInt(K[1])}else $=parseInt(s.explosionDamage),de=$;Re=s.explosionType}let ue;s.criticalType===ko.Meltdown?ue=s.critical:ue=s.critical===void 0||s.critical===0?0:s.critical+F;const ao=Math.trunc(_/4);let S=c?No:Ao;S+=y,ze.has(i.size)?S+=ze.get(i.size):console.log(`${d} has invalid size ${i.size}`),s.targeting!==void 0&&(S+=s.targeting),S-=ao;const no=p(s.delay,0);c&&v!=0&&(S+=10);const to=s.disruption??0,so=s.explosionDisruption??0,io=Ie(s.spectrum),lo=Ie(s.explosionSpectrum),ro=s.minChunks??1,co=s.maxChunks??1;s.name==="Ram"&&(ee=!0);const uo=s.type==="Launcher"&&s.name!="Sigix Terminator"&&s.name!="Supercharged Sigix Terminator"&&s.name!="Vortex Catalyst Activator";let me=s.salvage??0;return q>0&&s.projectileCount==1&&(s.type==="Ballistic Gun"||s.type==="Energy Gun")&&(me+=q),L>0&&s.projectileCount===1&&(s.type==="Ballistic Gun"||s.type==="Ballistic Cannon"||s.type==="Energy Gun"||s.type==="Energy Cannon")&&(me+=L),{accelerated:s.type==="Energy Gun"||s.type==="Energy Cannon",accuracy:S,baseAccuracy:S,criticalChance:ue,criticalType:s.criticalType,damageMin:C,damageMax:A,damageType:O,def:s,delay:no,disruption:to,exoBoosted:l.exo,explosionChunksMin:ro,explosionChunksMax:co,explosionDisruption:so,explosionMin:$,explosionMax:de,explosionSpectrum:lo,explosionType:Re,guided:s.waypoints!==void 0,isMissile:uo,numProjectiles:s.projectileCount,overflow:!s.type.includes("Gun"),overloaded:l.overloaded,salvage:me,spectrum:io}}),He=1+Math.max(p(a.particleCharger,0),0)/100,_e=p(a.armorIntegrityAnalyzer,0),$e=p(a.coreAnalyzer,0),Se=p(a.actuatorArray,0),we=[];if(c){const l=20+Se;E.forEach((v,s)=>{if(s!=0){let C=l+Math.trunc((E[0].delay-v.delay)/10);C=Math.min(C,100),C=Math.max(C,0),we.push(C)}})}const Ye=p(a.speed,100),Te=p(a.bonusMomentum,0),Me=p(a.initialMomentum,0),Qe=a.sneakAttacks||"None",Xe=Math.max(0,Math.min(99,p(a.actuator,0))),Je=Math.max(0,Math.min(99,p(a.weaponCycling,0))),Ne=1-(c?Xe:Je)/100,Ze=c?E[0].delay+jo[1]:wo(E.map(l=>l.def),Ne);let ae,se;const Ae=p(a.actionsSinceMoving,2);Ae==0?(ae=c?0:-10,se=0):Ae==1?(ae=0,se=10):(ae=10,se=10);const ke=a.onLegs==="Yes"?p(a.tilesRun,0):0;ke>0&&!c&&(ae-=Math.min(ke,3)*5);const Be=[];for(const l of P.parts)Be.push({item:l.def,integrityDrops:[],numDrops:0,totalCritRemoves:0,totalCorruptionPercent:0,totalFried:0,totalIntegrity:0,totalMelted:0});const Pe={numKills:0,items:Be,matterBlasted:0,matterDrop:0},eo={action1Accuracy:ae,action2Accuracy:se,armorAnalyzerChance:_e,analysis:a.analysis==="Yes",chargerBonus:He,coreAnalyzerChance:$e,corruption:_,distance:b,followupChances:we,forceBoosters:x,melee:c,meleeAnalysis:w,momentum:{bonus:Te,current:Te+Me,initial:Me},ramming:ee,recoil:H,recoilReduction:T,specialBonus:N,sneakAttack:!1,sneakAttackStrategy:Qe,speed:Ye,targetingComputerBonus:y,volleyTime:Ze,volleyTimeModifier:Ne},oo=a.endCondition||"Kill";return{actionNum:0,botState:P,endCondition:oo,initialBotState:P,killTus:{},killVolleys:{},lootState:Pe,offensiveState:eo,tus:0,weapons:E}}function ra(e,t){const a=e;return a==="analysis"&&t.analysis==="No"||a==="combatType"&&t.combatType==="Ranged"||a==="damageReduction"&&t.damageReduction==="None"||a==="endCondition"&&t.endCondition==="Kill"||a==="enemyBehavior"&&t.enemyBehavior==="Stand/Fight"||a==="onLegs"&&t.onLegs==="No"||a==="special"&&t.special==="No Special"||a==="xAxis"&&t.xAxis==="Volleys"}function Ma(){var ee;const[e,t]=po(),a=Oe(),r=Ce(),d=oa(),[m,f]=U.useState(!1),[k,g]=U.useState(""),[i,h]=U.useState(void 0),[B,I]=U.useState(""),[j,V]=U.useState({comparisonChartName:"",datasets:[]}),n=U.useRef(null);function W(c){const M=ia(c),N=go("/simulator",M,ra);t(N,{replace:!0})}const D=p((ee=d.numSimulations)==null?void 0:ee.replace(",",""),1e5);let R,Z,te,Q;if(i!==void 0){let c,M,N,y;if(d.xAxis==="Time"?(c=`Time Units/Kill vs ${i.botName}`,N=i.cumulativeKillPerTuData,M=i.killPerTuData,y="Number of Time Units"):(c=`Volleys/Kill vs ${i.botName}`,N=i.cumulativeKillPerVolleyData,M=i.killPerVolleyData,y="Number of Volleys"),R=o.jsx("div",{className:"chart-container",children:o.jsx(qe,{backgroundColors:["rgba(0, 98, 0, 0.3)","rgba(96, 96, 96, .3)"],borderColors:["rgba(0, 196, 0, 1)","rgba(128, 128, 128, 1)"],chartTitle:c,isPercentage:!0,values:[{label:"Current volley kill %",values:M},{label:"Cumulative Kill %",values:N}],xLabel:y,yLabel:"Percent of Kills"})}),te=o.jsxs("div",{className:"page-input-group",children:[o.jsx(u,{label:"Dataset Name",value:B||"",onChange:w=>I(w),placeholder:"Enter dataset name",tooltip:"The name for this dataset when added to the custom comparison chart. Can be renamed once added."}),o.jsx(J,{className:"flex-grow-0",onClick:()=>{const w={...j},x=new Array(Ke.length).fill(0);for(const F of j.datasets)x[F.colorIndex]+=1;let b=0,T;for(;T=x.indexOf(b),!(T>=0);)b+=1;const H=j.datasets.length===0?0:Math.max(...j.datasets.map(F=>F.id))+1;w.datasets=[...j.datasets,{colorIndex:T,data:i.comparisonData,id:H,name:B}],V(w),I("")},disabled:B==="",children:"Add To Comparison"})]}),d.showLoot==="Yes"){const w=i.lootState.items.find(T=>T.totalCorruptionPercent>0||T.totalFried>0)!==void 0,x=i.lootState.items.find(T=>T.totalCritRemoves>0)!==void 0,b=i.lootState.items.find(T=>T.totalMelted>0)!==void 0;Z=o.jsxs("div",{className:"loot-grid",children:[o.jsx($o,{bot:a.getBot(i.botName),lootState:i.lootState}),i.lootState.items.map((T,H)=>o.jsx(So,{itemLootState:T,numKills:i.lootState.numKills,showCorruption:w,showCriticals:x,showMelted:b},H))]})}}if(j.datasets.length>0){const c=[],M=[],N=[];for(const y of j.datasets)c.push("rgba(0, 0, 0, 0)"),M.push(Ke[y.colorIndex]),N.push({id:y.id.toString(),label:y.name,values:y.data});Q=o.jsxs(o.Fragment,{children:[o.jsx("div",{className:"page-input-group",children:o.jsx(u,{label:"Chart Name",value:j.comparisonChartName||"",onChange:y=>V({...j,comparisonChartName:y}),placeholder:"Custom Comparison",tooltip:"The name for this dataset when added to the custom comparison chart. Can be renamed once added."})}),o.jsx("div",{className:"custom-dataset-groups",children:j.datasets.map((y,w)=>o.jsxs("div",{children:[o.jsx(fo,{onChange:x=>{const b=[...j.datasets];b[w]={...b[w],name:x},V({...j,datasets:b})},value:y.name}),o.jsx(J,{onClick:()=>{const x=[...j.datasets];x.splice(w,1),V({...j,datasets:x})},children:"X"})]},y.id))}),o.jsx("div",{className:"chart-container",children:o.jsx(qe,{backgroundColors:c,borderColors:M,chartTitle:j.comparisonChartName||"Custom Comparison",isPercentage:!0,values:N,xLabel:"Number of Time Units",yLabel:"Percent of Kills"})})]})}function le(){let c=0;const M=performance.now();let N=M,y=N;const w=la(a,r,d,g);if(w===void 0){f(!1);return}function x(){for(;c<D;c++){if(ye)return;if(c%100===0){const b=performance.now();if(b-N>30){if(N=b,b-y>100){const T=(c*100/D).toFixed(1);n.current.innerHTML=`${String(T).padStart(4,"0")} % completed.`,y=b}setTimeout(x,0);break}}try{if(!To(w)){g(`The simulation exceeded ${Mo} volleys and will likely never kill.`),f(!1);return}}catch(b){console.log(b),g("The simulation encountered an unexpected error, this is a bug."),f(!1);return}}if(c>=D){let b=performance.now()-M;b/=1e3,g(`Completed in ${b.toFixed(2)} seconds.`),f(!1),ce(w)}}ye=!1,f(!0),x()}function re(){ye=!0,f(!1),g("Simulation cancelled"),n.current.innerHTML="Simulation cancelled"}function ce(c){function M(F,q,L,_){const E=F.filter(oe=>q[oe]/D>Math.pow(10,-2-L)).map(oe=>({x:parseInt(oe),y:Math.trunc(q[oe]/D*Math.pow(10,2+L))/Math.pow(10,L)}));return E.length<5&&E.push({x:E[E.length-1].x+_,y:0}),E}function N(F){const q=[];let L=0;return F.forEach(_=>{L+=_.y,q.push({x:_.x,y:Math.trunc(L*100)/100})}),q}const y=Object.keys(c.killTus);y.sort((F,q)=>parseFloat(F)-parseFloat(q));const w=N(M(y,c.killTus,c.offensiveState.melee?3:1,100)),x=M(Object.keys(c.killVolleys),c.killVolleys,1,1),b=M(y,c.killTus,c.offensiveState.melee?3:1,c.offensiveState.volleyTime),T=N(x),H=N(b);h({botName:d.botName||"G-34 Mercenary",comparisonData:w,cumulativeKillPerTuData:H,cumulativeKillPerVolleyData:T,killPerTuData:b,killPerVolleyData:x,lootState:c.lootState,volleyTime:c.offensiveState.volleyTime})}const P=m?o.jsx(J,{className:"simulate-button",tooltip:"Cancels the running simulation",onClick:re,children:"Cancel"}):o.jsx(J,{className:"simulate-button",tooltip:"Run the simulation",onClick:le,children:"Simulate"});return o.jsxs("div",{className:"page-content",children:[o.jsx(ea,{pageState:d,simulationInProgress:m,updatePageState:W}),o.jsxs("div",{className:"simulate-row",children:[P,o.jsx("label",{ref:n,className:"status-text",children:k})]}),R,te,Z,Q]})}export{Ma as default,na as getCoreRegen,sa as getPartRegen};
